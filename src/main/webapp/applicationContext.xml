<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:tx="http://www.springframework.org/schema/tx" xmlns:amq="http://www.springframework.org/schema/c"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

	<context:component-scan base-package="net" />
	<mvc:annotation-driven />
	<mvc:default-servlet-handler/>

	<bean id="jnditemplate" class="org.springframework.jndi.JndiTemplate">
		<property name="environment">
			<props>
				<prop key="java.naming.factory.initial">org.jboss.naming.remote.client.InitialContextFactory</prop>
				<prop key="java.naming.provider.url">http-remoting://localhost:8080</prop>
				<prop key="java.naming.security.principal">test</prop>
				<prop key="java.naming.security.credentials">asdf</prop>
			</props>
		</property>
	</bean>

	<!--<bean id="connectionfactory" class="org.springframework.jndi.JndiObjectFactoryBean">-->
		<!--<property name="jndiTemplate" ref="jnditemplate"/>-->
		<!--<property name="jndiName" value="java:jboss/exported/jms/RemoteConnectionFactory"/>-->
	<!--</bean>-->


	<!--<bean id="destination" class="org.springframework.jndi.JndiObjectFactoryBean">-->
		<!--<property name="jndiTemplate" ref="jnditemplate"/>-->
		<!--<property name="jndiName" value="java:jboss/exported/jms/queue/testBroker"/>-->
	<!--</bean>-->

	<!--<bean id="credentialsconnectionfactory"-->
		  <!--class="org.springframework.jms.connection.UserCredentialsConnectionFactoryAdapter">-->
		<!--<property name="targetConnectionFactory" ref="connectionfactory"/>-->
		<!--<property name="username" value="test"/>-->
		<!--<property name="password" value="asdf"/>-->
	<!--</bean>-->



	<!--<bean id="jmstemplate" class="org.springframework.jms.core.JmsTemplate">-->
		<!--<property name="connectionFactory" ref="credentialsconnectionfactory"/>-->
		<!--<property name="defaultDestination" ref="destination"/>-->
	<!--</bean>-->

	<!--<bean class="org.springframework.jms.listener.SimpleMessageListenerContainer">-->
		<!--<property name="connectionFactory" ref="credentialsconnectionfactory"/>-->
		<!--<property name="destination" ref="destination"/>-->
		<!--<property name="messageListener" ref="receiver"/>-->
	<!--</bean>-->

	<!--<bean id="sender" class="net.jms.JMSSender">-->
		<!--<property name="jmsTemplate" ref="jmstemplate"/>-->
	<!--</bean>-->

	<!--<bean id="receiver" class="net.jms.JMSReceiver"/>-->

	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="java:/PostgresDS"/>
	</bean>

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/WEB-INF/pages/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>

	<!-- Hibernate SessionFactory Bean definition -->
	<bean id="hibernate"
		  class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="annotatedClasses">
			<list>
				<value>net.models.Channel</value>
				<value>net.models.Condition</value>
				<value>net.models.EssenceForId</value>
				<value>net.models.Atmosphere</value>
				<value>net.models.Forecast</value>
				<value>net.models.Image</value>
				<value>net.models.Item</value>
				<value>net.models.Location</value>
				<value>net.models.Units</value>
				<value>net.models.Wind</value>
				<value>net.models.Astronomy</value>
				<value>net.models.Test</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL82Dialect</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager"/>

	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="hibernate"/>
	</bean>


								<!--</MQ TEST>-->

	<!--<bean id="connectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">-->
		<!--<property name="brokerURL" value="tcp://localhost:61616" />-->
	<!--</bean>-->

	<!--<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">-->
		<!--<property name="connectionFactory" ref="connectionFactory" />-->
		<!--<property name="receiveTimeout" value="10000" />-->
	<!--</bean>-->

	<!--<bean id="messageDestination" class="org.apache.activemq.command.ActiveMQQueue">-->
		<!--<constructor-arg value="messageQueue1" />-->
	<!--</bean>-->

	<!--<bean id="springJmsProducer" class="net.jms.JMSSender<!-<property name="destination" ref="messageDestination" />-->
		<!--<property name="jmsTemplate" ref="jmsTemplate" />-->
	<!--</bean>-->
	<!--<bean id="springJmsConsumer" class="net.jms.JMSSender<!-<property name="destination" ref="messageDestination" />-->
		<!--<property name="jmsTemplate" ref="jmsTemplate" />-->
	<!--</bean>-->

</beans>



